name: Build and deploy

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

on:
  push:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io/${{ github.repository }}

jobs:
  setup:
    name: Set variables
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: "Set image version"
        id: constants
        run: |
          export version="$(date +%Y%m%d%H%M%S)-$(git describe --always --dirty --exclude '*')"
          echo "VERSION=${version}" >> ${GITHUB_OUTPUT}
    outputs:
      VERSION: "${{ steps.constants.outputs.VERSION }}"

  build:
    name: Build and push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write
      checks: write
      pull-requests: write
    needs: setup
    env:
      VERSION: "${{ needs.setup.outputs.VERSION }}"
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Run tests
        uses: dagger/dagger-for-github@ad6a4e308a42fb2cf9be8b060f9aba9d57d4c9aa # v6
        with:
          version: "latest"
          verb: call
          args: test --output=target/junit.xml
          cloud-token: "${{ secrets.DAGGER_CLOUD_TOKEN }}"
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@170bf24d20d201b842d7a52403b73ed297e6645b # v2
        with:
          files: |
            target/junit.xml
      - name: Assemble manifests and push images
        uses: dagger/dagger-for-github@ad6a4e308a42fb2cf9be8b060f9aba9d57d4c9aa # v6
        with:
          version: "latest"
          verb: call
          args: assemble "--image=${REGISTRY}/yakup" "--version=${VERSION}" --output=target/assemble
          cloud-token: "${{ secrets.DAGGER_CLOUD_TOKEN }}"
      - name: Save manifests for later deploy
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4
        with:
          name: manifests
          path: target/assemble/*.yaml

  deploy:
    name: Deploy
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs:
      - setup
      - build
    steps:
      - name: Download manifests from build
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4
        with:
          name: manifests
      - name: Prepare kubeconfig
        run: |
          KUBECONFIG=$(mktemp --suffix -kubeconfig)
          echo "${{ secrets.KUBECONFIG }}" > ${KUBECONFIG}
          echo "KUBECONFIG=${KUBECONFIG}" >> ${GITHUB_ENV}
      - id: join-zt
        name: Join ZeroTier network
        uses: mortenlj/zerotier-actions/join-zt@main
        with:
          network_id: ${{ secrets.ZEROTIER_NETWORK_ID }}
          api_accesstoken: ${{ secrets.ZEROTIER_API_ACCESSTOKEN }}
          ping_target: k3s.home.ibidem.no
      - name: Run kubectl apply
        run: |
          kubectl apply --filename=application.yaml --wait=true --timeout=60s
          kubectl apply --namespace=ibidem-system --filename=deploy.yaml --selector=app=yakup --prune=true --wait=true --timeout=60s
      - name: Leave ZeroTier network
        if: always()
        uses: mortenlj/zerotier-actions/leave-zt@main
        with:
          node_id: ${{ steps.join-zt.outputs.node_id }}
          network_id: ${{ secrets.ZEROTIER_NETWORK_ID }}
          api_accesstoken: ${{ secrets.ZEROTIER_API_ACCESSTOKEN }}

  cleanup:
    name: Cleanup
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    permissions:
      packages: write
    steps:
      - name: Cleanup main images
        uses: dataaxiom/ghcr-cleanup-action@98b4022383d6ddb70ccbf6a378b4d8c67a60f066 # v1.0.13
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          package: yakup/yakup
          keep-n-tagged: 5
          older-than: 2 weeks
          delete-untagged: true
          delete-ghost-images: true
          delete-orphaned-images: true
          delete-partial-images: true
      - name: Cleanup old cache images
        uses: dataaxiom/ghcr-cleanup-action@98b4022383d6ddb70ccbf6a378b4d8c67a60f066 # v1.0.13
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          package: yakup/cache
          exclude-tags: prepare,test,build-aarch64-unknown-linux-musl,build-x86_64-unknown-linux-musl
          keep-n-tagged: 1
          delete-untagged: true
          delete-ghost-images: true
          delete-orphaned-images: true
          delete-partial-images: false
